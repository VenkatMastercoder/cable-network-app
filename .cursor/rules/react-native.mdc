---
description: 
globs: 
alwaysApply: false
---
# ðŸ“¦ React Native + Expo Best Practices

- Use functional components with hooks  
- Utilize Expo SDK features and APIs  
- Implement proper navigation using React Navigation  
- Use Expo's asset system for images and fonts  
- Implement proper error handling and crash reporting  
- Utilize Expo's push notification system  
- Use centralized theming for consistency (`COLORS`, `SIZES`, `FONTS`)  
- Follow a naming convention for utility classes (e.g., `bg-primary`, `text-title`)  
- Avoid hardcoded styles; always reference the theme file or utility class  


---

# ðŸŽ¨ Theme Usage Guidelines

1. Use utility-style class names that map to theme values:
   - Background: `bg-primary`, `bg-danger`, `bg-light`, `bg-dark`
   - Text: `text-primary`, `text-title`, `text-light`, `text-dark`
   - Border: `border-primary`, `border-light`, `border-dark`
2. Utility classes should directly refer to values in `COLORS`, `SIZES`, or `FONTS`.
3. Avoid inline styles unless absolutely necessary.
4. Use `theme.FONTS` for all text styles and typography.
5. Reuse predefined spacing (padding, margin) via `theme.SIZES`: `p-15`, `m-15`, etc.
6. Maintain light/dark mode compatibility using theme-aware variants: `bg-background` vs `bg-darkBackground`.
7. If using a utility-first framework (like Tailwind for web), ensure class mappings match `theme.js` values.
8. All theme changes must be made centrally in `src/theme/theme.js`.

---

# ðŸ§  Utility Class Reference

| Utility Class  | Theme Mapping               |
|----------------|-----------------------------|
| `bg-primary`   | `COLORS.primary`            |
| `bg-light`     | `COLORS.light`              |
| `bg-dark`      | `COLORS.darkBackground`     |
| `text-title`   | `COLORS.title`              |
| `text-light`   | `COLORS.text`               |
| `border-light` | `COLORS.borderColor`        |
| `p-15`         | `SIZES.padding`             |
| `m-15`         | `SIZES.margin`              |
| `radius-lg`    | `SIZES.radius_lg`           |
| `h1`           | `FONTS.h1`                  |
| `text-sm`      | `FONTS.fontSm`              |
| `font-bold`    | `FONTS.fontBold`            |

---

# âœ… Additional Instructions

1. Use **TypeScript** for type safety  
2. Implement styling using `StyleSheet` instead of inline styles  
3. Use **Expo vector icons** for icons  
4. Use **Expo Secure Store** for sensitive data  
5. Implement proper **offline support**  
6. Follow **React Native best practices** for performance  
7. Use **OTA updates** via Expo for fast deployments  
